name: Node.js CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # -------- CI Stage: Build & Test --------
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test || echo "No tests found, skipping..."

  # -------- Docker Build & Push --------
  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/nodeapp:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/nodeapp:latest

  # -------- Deploy to Server via SSH --------
  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "Remove old latest image (if exists)..."
            docker rmi -f ${{ secrets.DOCKER_USERNAME }}/nodeapp:latest || true

            echo "Pulling latest image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/nodeapp:latest

            echo "Stopping old container..."
            docker stop nodeapp || true
            docker rm nodeapp || true

            echo "Starting new container..."
            docker run -d -p 8080:3000 --name nodeapp ${{ secrets.DOCKER_USERNAME }}/nodeapp:latest

